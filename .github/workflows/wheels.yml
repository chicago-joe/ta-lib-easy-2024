name: Build

on:
  push:
    branches:
      - main

jobs:
    build_wheels:
        name: Build wheels on ${{ matrix.os }}
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [ubuntu-latest, windows-latest, macos-latest]
                arch: [AMD64, x86_x64]

        steps:
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                submodules: recursive

            - name: Install cibuildwheel
              run: python -m pip install cibuildwheel==2.21.1

            - name: Build wheels
              run: python -m cibuildwheel --output-dir wheelhouse

            - name: Upload built wheels as artifacts
              uses: actions/upload-artifact@v3
              with:
                name: wheels
                path: wheelhouse/*

    upload_wheels:
        name: Upload wheels
        runs-on: ubuntu-latest  # Use any available OS; it can be a dedicated upload job
        needs: build_wheels     # Ensure this runs after the wheels are built
        steps:
          - name: Checkout code
            uses: actions/checkout@v4
            with:
              submodules: recursive

          - name: Download built wheels
            uses: actions/download-artifact@v3
            with:
              name: wheels
              path: wheelhouse

          - name: Install Twine
            run: python -m pip install twine

          - name: Upload to PyPI
            run: |
              twine upload wheelhouse/*
            env:
              TWINE_USERNAME: __token__
              TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}